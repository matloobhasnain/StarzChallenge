//
//  TVShowInfoInteractor.swift
//  StarsPlayChallenge
//
//  Created by Matloob on 10/9/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TVShowInfoBusinessLogic
{
    func fetchTVShow(request: TVShowInfo.TVShow.Request)
    func fetchSeasonDetail(request: SeasonInfo.seasonDetail.Request)
}

protocol TVShowInfoDataStore
{
    //var name: String { get set }
}

class TVShowInfoInteractor: TVShowInfoBusinessLogic, TVShowInfoDataStore
{
    var presenter: TVShowInfoPresentationLogic?
    var worker: TVShowInfoWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func fetchTVShow(request: TVShowInfo.TVShow.Request)
    {
        worker = TVShowInfoWorker()
        
        worker?.FetchRemoteData(for: TVShowBase.self, type: .tvshow(tv_id: request.tv_id ?? "", apiKey: ""), completion: { [weak self](result) in
            switch result {
            case let .success(tvshow):
                let response = TVShowInfo.TVShow.Response(tvShowDetail: tvshow)
                self?.presenter?.presentTVShowResponse(response: response)
            case let .failure(error):
                print(error.localizedDescription)
            }
        })
        
        
    }
    
    func fetchSeasonDetail(request: SeasonInfo.seasonDetail.Request) {
        worker = TVShowInfoWorker()
        worker?.FetchRemoteData(for: SeasonModel.self, type: .season(tv_id: request.tv_id ?? "", season_id: request.season_number ?? ""), completion: {[weak self] (result) in
            switch result {
            case let .success(seasonDetail):
                print(seasonDetail)
                let response = SeasonInfo.seasonDetail.Response(seasonModel: seasonDetail)
                self?.presenter?.presentSeasonDetailResponse(response: response)
                
            case let .failure(error):
                print(error.localizedDescription)
            }
            
        })
        
    }
    
}
